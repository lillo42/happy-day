// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package apis

import (
	"github.com/google/wire"
	"happy_day/application/customer"
	"happy_day/application/product"
	"happy_day/application/reservation"
	"happy_day/infrastructure"
)

// Injectors from wire.go:

func initializeGetAllCustomerHandler() customer.GetAllHandler {
	clientOptions := infrastructure.ProvideMongoDbOptions()
	mongoDbCustomerRepository := infrastructure.ProviderCustomerRepository(clientOptions)
	getAllHandler := customer.ProvideGetAllHandler(mongoDbCustomerRepository)
	return getAllHandler
}

func initializeGetCustomerByIdHandler() customer.GetByIdHandler {
	clientOptions := infrastructure.ProvideMongoDbOptions()
	mongoDbCustomerRepository := infrastructure.ProviderCustomerRepository(clientOptions)
	getByIdHandler := customer.ProvideGetByIdHandler(mongoDbCustomerRepository)
	return getByIdHandler
}

func initializeChangeOrCreateCustomerHandler() customer.ChangeOrCreateHandler {
	clientOptions := infrastructure.ProvideMongoDbOptions()
	mongoDbCustomerRepository := infrastructure.ProviderCustomerRepository(clientOptions)
	changeOrCreateHandler := customer.ProvideChangeOrCreateHandler(mongoDbCustomerRepository)
	return changeOrCreateHandler
}

func initializeDeleteCustomerHandler() customer.DeleteHandler {
	clientOptions := infrastructure.ProvideMongoDbOptions()
	mongoDbCustomerRepository := infrastructure.ProviderCustomerRepository(clientOptions)
	deleteHandler := customer.ProvideDeleteHandler(mongoDbCustomerRepository)
	return deleteHandler
}

// Product
func initializeGetAllProductHandler() product.GetAllHandler {
	clientOptions := infrastructure.ProvideMongoDbOptions()
	mongoDbProductRepository := infrastructure.ProvideProductRepository(clientOptions)
	getAllHandler := product.ProvideGetAllHandler(mongoDbProductRepository)
	return getAllHandler
}

func initalizeGetProductByIdHandler() product.GetByIdHandler {
	clientOptions := infrastructure.ProvideMongoDbOptions()
	mongoDbProductRepository := infrastructure.ProvideProductRepository(clientOptions)
	getByIdHandler := product.ProvideGetByIdHandler(mongoDbProductRepository)
	return getByIdHandler
}

func initializeChangeOrCreateProductHandler() product.ChangeOrCreateHandler {
	clientOptions := infrastructure.ProvideMongoDbOptions()
	mongoDbProductRepository := infrastructure.ProvideProductRepository(clientOptions)
	changeOrCreateHandler := product.ProvideChangeOrCreateHandler(mongoDbProductRepository)
	return changeOrCreateHandler
}

func initializeDeleteProductHandler() product.DeleteHandler {
	clientOptions := infrastructure.ProvideMongoDbOptions()
	mongoDbProductRepository := infrastructure.ProvideProductRepository(clientOptions)
	deleteHandler := product.ProvideDeleteHandler(mongoDbProductRepository)
	return deleteHandler
}

// Reservation
func initializeGetAllReservationHandler() reservation.GetAllHandler {
	clientOptions := infrastructure.ProvideMongoDbOptions()
	mongoDbReservationRepository := infrastructure.ProvideReservationRepository(clientOptions)
	getAllHandler := reservation.ProvideGetAllHandler(mongoDbReservationRepository)
	return getAllHandler
}

func initializeGetReservationByIdHandler() reservation.GetByIdHandler {
	clientOptions := infrastructure.ProvideMongoDbOptions()
	mongoDbReservationRepository := infrastructure.ProvideReservationRepository(clientOptions)
	getByIdHandler := reservation.ProvideGetByIdHandler(mongoDbReservationRepository)
	return getByIdHandler
}

func initializeCreateReservationHandler() reservation.CreateHandler {
	clientOptions := infrastructure.ProvideMongoDbOptions()
	mongoDbProductRepository := infrastructure.ProvideProductRepository(clientOptions)
	mongoDbReservationRepository := infrastructure.ProvideReservationRepository(clientOptions)
	createHandler := reservation.ProvideCreateHandler(mongoDbProductRepository, mongoDbReservationRepository)
	return createHandler
}

func initializeChangeReservationHandler() reservation.ChangeHandler {
	clientOptions := infrastructure.ProvideMongoDbOptions()
	mongoDbReservationRepository := infrastructure.ProvideReservationRepository(clientOptions)
	changeHandler := reservation.ProvideChangeHandler(mongoDbReservationRepository)
	return changeHandler
}

func initializeDeleteReservationHandler() reservation.DeleteHandler {
	clientOptions := infrastructure.ProvideMongoDbOptions()
	mongoDbReservationRepository := infrastructure.ProvideReservationRepository(clientOptions)
	deleteHandler := reservation.ProvideDeleteHandler(mongoDbReservationRepository)
	return deleteHandler
}

func initializeQuoteReservationHandler() reservation.QuoteHandler {
	clientOptions := infrastructure.ProvideMongoDbOptions()
	mongoDbProductRepository := infrastructure.ProvideProductRepository(clientOptions)
	quoteHandler := reservation.ProvideQuoteHandler(mongoDbProductRepository)
	return quoteHandler
}

// wire.go:

var (
	ProviderSet = wire.NewSet(customer.ProviderSet, product.ProviderSet, reservation.ProvideSet, infrastructure.ProviderSet)
)
